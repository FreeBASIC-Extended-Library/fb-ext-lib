export
ifndef VERBOSE
    VERBOSE := 1
endif

ifeq ($(VERBOSE),0)
    MAKEFLAGS += -s
endif


# try and detect host OS..
HOST :=
ifeq ($(OS),DOS)
    HOST := dos
else
    ifeq ($(OS),Windows_NT)
        HOST := win32
    else
        ifdef WINDIR
            HOST := win32
        else
            ifdef windir
                HOST := win32
            else
                ifdef HOME
                    HOST := linux
                endif
            endif
        endif
    endif
endif

# infer target OS from host OS..
ifndef TARGET
    ifndef HOST
        CHECKHOST_MSG := $(error error: TARGET not defined and HOST couldn't be guessed)
    else
        CHECKHOST_MSG :=
    endif
    TARGET := $(HOST)
endif

# infer target bit depth from host OS
ifndef BITS
  BITS := $(shell fbc -version\
                  | grep 'bit'\
                  | awk '{ gsub(/(\(|\)|bit)/,"",$$10); print $$10 }')
endif

ifeq ($(TARGET), win32)
    ifeq ($(BITS), 64)
        TARGET := win64
    endif
endif

#infer target architecture
ifndef ARCH
	ifeq ($(TARGET),win32)
		    ARCH := x86
		    ARCH_RAW := x86
	else
		ARCH_RAW := $(shell fbc -print target\
												| awk '{gsub(/([a-z]+-|_64)/,"",$$1); print $$1;}')
		ifeq ($(ARCH_RAW),x86)
		    ARCH := x86
            
		else
            ifeq ($(ARCH_RAW), win64)
                ARCH := x86
            else
			    ARCH := $(ARCH_RAW)
            endif
		endif
	endif
endif

# get command names and install paths..
ifeq ($(TARGET),linux)
    EXE_EXT := .bin
    RM := rm -rf
    EXE_PFX := ./
    CP := cp -r

    # get installation paths.
    FBC_STANDALONE := $(shell fbc -version | grep standalone)
    ifeq (,$(FBC_STANDALONE))
        ifndef INSTALL_DIR
            FBC_PREFIX := $(shell fbc -version\
                                  | grep prefix\
                                  | sed "s/Configured with prefix //")
            INSTALL_DIR := $(FBC_PREFIX)
        endif
        INC_INSTALL_DIR := $(INSTALL_DIR)/include/freebasic
        LIB_INSTALL_DIR := $(INSTALL_DIR)/lib/freebasic/linux
        # confirm this..
        DOC_INSTALL_DIR := $(INSTALL_DIR)/share/doc/libext
    else
        ifndef INSTALL_DIR
            INSTALL_DIR := /usr/share
        endif
        INC_INSTALL_DIR := $(INSTALL_DIR)/freebasic/inc
        LIB_INSTALL_DIR := $(INSTALL_DIR)/freebasic/lib/linux
        DOC_INSTALL_DIR := $(INSTALL_DIR)/doc/libext
    endif

else
    # using MSYS ?
    ifeq (msys,$(findstring msys,$(shell sh --version 2>NULL)))
        EXE_PFX := ./
        RM := rm
        CP := cp -r

        ifndef INSTALL_DIR
            INSTALL_DIR := /c/Program\ Files/FreeBASIC
        endif
        INC_INSTALL_DIR := $(INSTALL_DIR)/inc
        LIB_INSTALL_DIR := $(INSTALL_DIR)/lib

    # using cmd.exe (or similar) ?
    else
        RM := del
        CP := xcopy
        ifndef INSTALL_DIR
            INSTALL_DIR := "C:\Program Files\FreeBASIC"
        endif
    endif
    EXE_EXT := .exe

endif

MD := mkdir -p
CD := cd

ifeq ($(VERBOSE),0)
FBC := @fbc
else
FBC := fbc
endif

INCLUDE_DIR := include/freebasic
SOURCE_DIR := src
LIBRARY_DIR := lib/$(TARGET)
BINARY_DIR := bin/$(TARGET)
TESTS_DIR := tests
DOCS_DIR := docs
EXAMPLES_DIR := examples

ifndef INCPREFIX
    ifndef STANDALONE
        INCPREFIX := include/freebasic
    else
        INCPREFIX := inc
    endif
endif

ifndef LIBPREFIX
    ifndef STANDALONE
        LIBPREFIX := lib/$(TARGET)
    else
        LIBPREFIX := lib/freebasic/$(TARGET)
    endif
endif

ifndef DOCPREFIX
    ifndef STANDALONE
        DOCPREFIX := doc/ext
    else
        DOCPREFIX := share/doc/libext
    endif
endif
